library(sqldf)
Data <- read.csv.sql(a, sql = 'select * from file where Date == "2007-01-01")
mean(b)
?text
?plot
?quartz
?postscript
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col = "blue")
abline(h = 12)
hist(ppm,col = "green")
rug(ppm)
low
high
hist(ppm,col = "green",breaks = 100)
rug(ppm)
hist(ppm,col = "green")
abline(v = 12,lwd = 2)
abline(v = median(ppm),col = "magenta",lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col = "wheat",main = "Number of Counties in Each Region")
boxplot(pm25~region,col = "red")
boxplot(pm25~region,data = pollution,col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution,region == "east")
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25,col = "green")
hist(subset(pollution,region=="west"),col = "green")
hist(subset(pollution$pm25,region=="west"),col = "green")
hist(subset(pollution,region=="west"),col = "green")
hist(subset(pollution,region =="west"),col = "green")
?subset
hist(subset(pollution,region =="west")$pm25,col = "green")
with(pollution,plot)
with(pollution, plot(latitude, pm25))
abline(lwd = 2,lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude,ppm,col = pollution$region)
abline(h = 12,lwd = 2 ,lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region == "west")
plot(west$latitude,west$pm25,main = "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "east")
plot(east$latitude, east$pm25, main = "East")
library(lattice)
library(datasets)
x <-  xyplot(Ozone~Wind,data = airquality)
class(x)
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
y <- BodyWeight
head(BodyWeight)
unique(BodyWeight$Rat)
unique(BodyWeight$Diet)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
unique(airquality$Month)
library(swirl)
swirl()
?Devices
with(faithful,plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png,file = "geyserplot.png")
dev.off()
library(swirl)
swirl()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data = mpg)
head(airquality)
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab = "Month",ylab = "Ozone (ppb)",col.axis = "blue",col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type = "n")
title(main = "Wind and Ozone in NYC")
may <- which(airquality$Month == 5 )
may <- subset(airquality,Month == 5)
points(may$Wind,may$Ozone,color = "blue",pch = 3)
points(may$Wind,may$Ozone,col = "blue",pch = 17)
notmay <- subset(airquality,Month != 5)
points(notmay$Wind,notmay$Ozone,col = "red",pch = 16)
points(notmay$Wind,notmay$Ozone,col = "red",pch = 8)
legend("topright",pch = c(17,8),col = c("blue","red"),legend = c("May","Other Months"))
abline()
abline(v = median(airquality$Wind),lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind,airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1),oma = c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R,airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5,col = "blue")
abline(h = .4,col = "red")
5
5
12
abline(h = .05,col = "green")
dist(dFsm)
hc
heatmap(dataMatrix,col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col = c("red","orange","purple") ,pdc = 3,cex = 2,lwd = 2)
points(cx,cy,col = c("red","orange","purple") ,pch = 3,cex = 2,lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch = 19,cex = 2,col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx,newCy,col = cols1,pch = 8,cex = 2,lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch = 19,cex = 2,col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy,pch = 9,cex = 2,col = cols1,lwd = 2)
points(finalCx,finalCy,col = cols1,pch = 9,cex = 2,lwd = 2)
kmeans(dataFrame,centers = 3)
kmObj$iter
plot(x,y,col = kmObj$cluster,pch = 19, cex = 2 )
points(kmObj$centers,col = c("black","red","green"),pch = 3,cex = 3,lwd = 3)
plot(x,y,col = kmeans(dataFrame,6)$cluster,pch = 19,cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster,pch = 19,cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster,pch = 19,cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d[1]) %*% svd1$v
a1 <- (svd1$u[,1]*svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[,c(562,563)])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kclust <- kmeans(sub1[,-c(562,563)],centers = 6)
kclust <- kmeans(sub1[,-c(562,563)],centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kclust$cluster,sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562,563)],centers = 6,nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12],pch = 19,ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12],pch = 19,ylab = "Walkdown Cluster")
library(httr)
oauth_endpoints("epa")
oauth_endpoints("github")
1304287*28*8
292160288/(2^20)
292160288/2^20
library(swirl)
swirl()
dim(pm0)
View(pm0)
head(pmo)
head(pm0)
cnames
strsplit(cnames,"|",fixed = TRUE)
cnames <- strsplit(cnames,"|",fixed = TRUE)
cnames
names(pm0 <- make.names(cnames[[1]][wcol]))
names(pm0 <- make.names(cnames[[1]][wcol])
)
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
x0 <- pm0$Sample.value
stop()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|",fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1 < 0
sum(negative)
sum(negative,na.rm = TRUe)
sum(negative,na.rm = TRUE)
mean(negative,na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"Y%m%d")
dates <- as.Date(as.character(dates), "Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,Statecode == 36 & county.site %in% both)
cnt0 <- subset(pm0,State.code == 36 & county.site %in% both)
cnt0 <- subset(pm0,State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, Contry.Code == 63 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2),mar = c(4,4,2,1))
plot(dates0,x0sub,pch = 20)
abline(h = median(x0sub), lwd = 2, na.rm =TRUE)
abline(h = median(x0sub,na.rm =TRUE), lwd =2)
plot(dates1,x1sub,pch = 20)
abline(h = median(x1sub,na.rm =TRUE), lwd =2)
rng <- range(x0sub,x1sub, na.rm =  TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1, by = "state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim = c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3])
)
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
?aggregate
library(swirl)
swirl()
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
1-(2+1)/36
deck
52
4/52
(1/52)*(1/51)*(1/50)*(1/49)*(1/48)
12/52
(12/52)*(3/51)
(12/52)*(2/51)
2/51
library(swirl)
swirl()
1.6*0.8/2
0.64
mypdf
integrate(mypdf,lower = 0,upper = 1.6)
sqrt(2)
0.997*0.001
(1-0.985)*(1-0.001)
(0.997*0.001)/(0.000997+0.014985)
(1+2+3+4+5+6)*1/6
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5 *( E(X_hi)+E(X_lo) )
0.5*(expect_dice(dice_low)+expect_dice(dice_high))
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
dice_sqr
ex2_fair <- sum(dice_fair*PDF)
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair-(3.5)^2
ex2_fair-3.5^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2*sqrt
2*sqrt(10)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3)*0.8^3*0.2^2
choose(5,3)*0.8^3*0.2^2+choose(5,4)*0.8^4*0.2+choose(5,5)*0.8^5
pbinom(quantile = 2, size = 5,prob = .8,lower.tail = FALSE)
pbinom(2, size = 5,prob = .8,lower.tail = FALSE)
qnorm(prob)
qnorm(10)
qnorm(.1)
0
qnorm(0.975,3,2)
1.96*2+3
pnorm(1200,1020,50,lower.tail = FALSE)
(1200-1020)50
(1200-1020)/50
pnorm((1200-1020)/50,lower.tail = FALSE)
qnorm(0.75,1020,50,lower.tail = TRUE)
pnorm(qnorm(.53))
.53
ppois(3,2.5*4)
pbinom(5,1000,.01)
ppois(5,n*p)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
0.6 +c(-(qnorm(.975)*sqrt(0.6*0.4/100)),qnorm(.975)*sqrt(0.6*0.4/100)
)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
x$conf.int
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb)
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf.construct
poisson.test(5,94.32)$conf
?pnorm
pnorm(0.7,80,10,lower.tail = FALSE)
pnorm(70,80,10,lower.tail = FALSE)
pnorm(70,80,10,lower.tail = TRUE)
pnorm(70,80,10)
qnorm(.95,1100,75)
?qnorm
qnorm(.95,1100,75,n = 100)
qnorm(100,.95,1100,75,n = 100)
qnorm(100,.95,1100,75)
qnorm(.95,1100,75,size = 100)
b <- 1100 + c(-1,1)*qt(.95,8)*(30/sqrt(9))
b <- 1100 + c(-1,1)*qt(.95,8)*(30/sqrt(9))
b
b <- 2 + c(-1,1)*qt(.95,8)*(1.5/sqrt(9))
b <- 2 + c(-1,1)*qt(.95,8)*(2.1/sqrt(9))
b <- 2 + c(-1,1)*qt(.95,8)*(2.6/sqrt(9))
b <- 2 + c(-1,1)*qt(.95,8)*(0.3/sqrt(9))
b <- -2 + c(-1,1)*qt(.95,8)*(1.5/sqrt(9))
b <- -2 + c(-1,1)*qt(.95,8)*(2.1/sqrt(9))
b <- -2 + c(-1,1)*qt(.95,8)*(2.6/sqrt(9))
b <- -2 + c(-1,1)*qt(.95,8)*(0.3/sqrt(9))
sd <- 6/qt(.95,8)
sd <- 6/qt(.975,8)
x<- 1:0.1:100
x<- 1:.1:100
x<- 1:100
?":"
x<- 1:100:.1
x<- 1:1000
plot(ln(sin(x)))
plot(log(sin(x)))
?plot
plot(log(sin(x)),type = "l")
?plot
plot(log(sin(x)),type = "c")
plot(sin(x)),type = "l")
plot(sin(x))
plot(sin(x),type = "l")
x<- 1:100
plot(sin(x),type = "l")
x<- 1:60
plot(sin(x),type = "l")
plot(log(sin(x)),type = "l")
x<- 1:100
plot(log(sin(x)),type = "l")
plot(cars)
lines(lowess(cars))
plot(sin, -pi, 2*pi) # see ?plot.function
## Discrete Distribution Plot:
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
## Simple quantiles/ECDF, see ecdf() {library(stats)} for a better one:
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
# }
curve(expr = sin,from = -3,to = 3,n=60
)
curve(expr = sin,from = -3,to = 3,n=100)
curve(expr = sin,from = -3,to = 3,n=1000)
curve(expr = sin,from = -3,to = 3,n=10000)
curve(expr = sin,from = -3,to = 3,n=100000)
curve(expr = log(sin),from = -3,to = 3,n=100000)
boy <- function(x) log(sin(x))
curve(expr = boy,from = -3,to = 3,n=100000)
curve(expr = boy,from = -3,to = 3,n=1000)
boy <- function(x) log(cos(x))
curve(expr = boy,from = -3,to = 3,n=1000)
curve(expr = cos,from = -3,to = 3,n=1000)
boy <- function(x) log(cos(x)*sin(x))
curve(expr = cos,from = -3,to = 3,n=1000)
curve(expr = boy,from = -3,to = 3,n=1000)
curve(expr = x^3-x^2,from = -3,to = 3,n=1000)
curve(expr = x^3-x^2+x^4,from = -3,to = 3,n=1000)
boy <- function(x) log(x^3-x^2+x^4)
curve(expr = boy,from = -3,to = 3,n=1000)
curve(expr = x^3-x^2+x^4,from = -3,to = 3,n=1000)
curve(expr = x^3-x^2+x^4,from = -3,to = 3,n=10000)
curve(expr = boy,from = -3,to = 3,n=1000)
install.packages(knitr)
library(knitr)
install.packages("knitr")
install.packages(miktex)
install.packages("tinytex")
library(knitr)
library(tinytex)
library(knitr)
setwd("./R Working Directory/Reproducible Research/RepData_PeerAssessment1")
